# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.

#name: "Ruby on Rails CI"
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    services:
#      postgres:
#        image: postgres:11-alpine
#        ports:
#          - "5432:5432"
#        env:
#          POSTGRES_DB: rails_test
#          POSTGRES_USER: rails
#          POSTGRES_PASSWORD: password
#    env:
#      RAILS_ENV: test
#      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      # Add or replace dependency steps here
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
#        with:
#          bundler-cache: true
#      # Add or replace database setup steps here
#      - name: Set up database schema
#        run: bin/rails db:schema:load
#      # Add or replace test runners here
#      - name: Run rspec
#        run: bundle exec rspec

# ここから以前のやつ
#jobs:
#  rspec:
#    runs-on: ubuntu-latest
#      image: ruby:3.2.3
#    services:
#      postgres:
#        image: postgres:11-alpine
#        env:
#          POSTGRES_USER: rails
#      container:
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: rails_test
#        ports:
#        - 5432:5432
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410
#        with:
#          path: vendor/bundle
#          key: bundle-${{ hashFiles('**/Gemfile.lock') }}
#      - name: Bundle install
#        env:
#          RAILS_ENV: test
#        run: |
#          gem install bundler
#          bundle install --jobs 4 --retry 3 --path vendor/bundle
#      - name: Setup DB, Run tests
#        env:
#          PGUSER: postgres
#          PGPORT: ${{ job.services.postgres.ports[5432] }}
#          RAILS_ENV: test
#        run: |
#          bin/rails db:create db:schema:load
#          bundle exec rspec

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:11-alpine
#        ports:
#          - 5432:5432
#        env:
#          POSTGRES_USER: rails_test
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: myapp_test
#    env:
#      RAILS_ENV: test
#      POSTGRES_USER: rails_test
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: myapp_test
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Ruby 3.2.3
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 3.2.3
#
#      - name: Setup bundler
#        run: gem install bundler
#
#      - name: Cache gems
#        uses: actions/cache@v2
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gem-
#
#      - name: Install gems
#        run: bundle install --path vendor/bundle --jobs 4
#
#      - name: Setup Database
#        run: |
#          cp -v config/database.yml.ci config/database.yml
#          bundle exec rails db:create
#          bundle exec rails db:schema:load
#
#      - name: Run RSpec tests
#        run: bundle exec rspec
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
#        with:
#          bundler-cache: true
#      - name: Generate binstubs
#        run: bundle binstubs bundler-audit brakeman rubocop
#      # Add or replace any other lints here
#      - name: Security audit application code
#        run: bin/brakeman -q -w2
#      - name: Run rubocop
#        run: bundle exec rubocop
#      - name: Security audit dependencies
#        run: bin/bundler-audit --update




#### kokkaraaaaaaaaaaa

name: Rails CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: rails_test
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myapp_test
      chrome:
              image: seleniarm/standalone-chromium:latest
              ports:
                - 4444:4444

    env:
      RAILS_ENV: test
      POSTGRES_USER: rails_test
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myapp_test
      SELENIUM_DRIVER_URL: http://chrome:4444/wd/hub

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Ruby 3.2.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.3

      - name: Setup bundler
        run: gem install bundler

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Install gems
        run: bundle install --path vendor/bundle --jobs 4

      - name: Setup Database
        run: |
          cp -v config/database.yml.ci config/database.yml
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run RSpec tests
        run: bundle exec rspec

      - name: Run RuboCop
        run: bundle exec rubocop

      - name: Security audit application code
        run: bin/brakeman -q -w2

      - name: Security audit dependencies
        run: bin/bundler-audit --update
