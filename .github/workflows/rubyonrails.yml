# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.

name: Rails CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myapp_test
      chrome:
        image: seleniarm/standalone-chromium:latest
        ports:
          - 4444:4444

    env:
      RAILS_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myapp_test

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup Ruby 3.2.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.3

      - name: Setup bundler
        run: gem install bundler

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Install gems
        run: bundle install --path vendor/bundle --jobs 4

      - name: Setup Database
        run: |
          cp -v config/database.yml.ci config/database.yml
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Precompile assets
        run: |
          RAILS_ENV=test bundle exec rake assets:precompile

      - name: Run RSpec tests
        run: bundle exec rspec

      - name: Run RuboCop
        run: bundle exec rubocop

      - name: Security audit application code
        run: bundle exec brakeman

      - name: Security audit dependencies
        run: |
          bundle exec bundler-audit update
          bundle exec bundler-audit