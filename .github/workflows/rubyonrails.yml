# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    services:
#      postgres:
#        image: postgres:11-alpine
#        ports:
#          - "5432:5432"
#        env:
#          POSTGRES_DB: rails_test
#          POSTGRES_USER: rails
#          POSTGRES_PASSWORD: password
#    env:
#      RAILS_ENV: test
#      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      # Add or replace dependency steps here
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
#        with:
#          bundler-cache: true
#      # Add or replace database setup steps here
#      - name: Set up database schema
#        run: bin/rails db:schema:load
#      # Add or replace test runners here
#      - name: Run rspec
#        run: bundle exec rspec
jobs:
  rspec:
    runs-on: ubuntu-latest
      image: ruby:3.2.3
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: rails
      container:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: rails_test
        ports:
        - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}
      - name: Bundle install
        env:
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: Setup DB, Run tests
        env:
          PGUSER: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: |
          bin/rails db:create db:schema:load
          bundle exec rspec
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@78c01b705fd9d5ad960d432d3a0cfa341d50e410 # v1.179.1
        with:
          bundler-cache: true
      - name: Generate binstubs
        run: bundle binstubs bundler-audit brakeman rubocop
      # Add or replace any other lints here
      - name: Security audit application code
        run: bin/brakeman -q -w2
      - name: Run rubocop
        run: bundle exec rubocop
      - name: Security audit dependencies
        run: bin/bundler-audit --update